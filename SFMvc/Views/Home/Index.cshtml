@{
    ViewBag.Title = "Home";
}

@model IndexVM[]


<div class="overall-container">
    

    <div class="search-container">

        <div class="input-group input-group-lg">
            <input type="text" class="form-control" id="searchText" placeholder="Search by Title..." onkeyup="search()">
        </div>


        <button onclick="search()" class="btn btn-outline-light me-2" style="margin-left: 20px;">Search</button>
    </div>
<div id="searchResults" class="my-container">

</div>

<div id="noResultsMessage" style="display: none; color:#E2E3E4">Oops! We don't have that one yet.</div>
</div>


<script>
    function search() {
        var searchText = document.getElementById("searchText").value.toLowerCase();
        var searchResultsContainer = document.getElementById("searchResults");
        var noResultsMessage = document.getElementById("noResultsMessage");
        searchResultsContainer.innerHTML = "";
        noResultsMessage.style.display = "none";
        var resultsFound = false;

    @foreach (var item in Model)
    {
        <text>
        GetButtonText(@item.Id);
         if ("@item.Title".toLowerCase().includes(searchText)) {
         resultsFound = true;
         searchResultsContainer.innerHTML +=
             `<div class="my-col">
                <div class="card" style="box-shadow: -3px -3px 5px black;">
                <a asp-controller="Home" asp-action="Details" asp-route-id="@item.Id">
                        <div class="center-cropped card-img-top" style="background-image: url('/Images/@item.ImageUrl');"></div></a>
                <div class="card-body" style="display: flex; flex-direction: column;">
                        <a asp-controller="Home" asp-action="Details" asp-route-id="@item.Id" style="text-decoration:none; color:#E2E3E4"><h2 class="card-title">@item.Title</h2></a>
                        @if (item.Format == "Serie"){<p><i> @item.NumberOfSeasons @(item.NumberOfSeasons > 1 ? "seasons" : "season")</i></p>}
                        @if (item.Format == "Miniserie"){<p><i> @item.NumberOfEpisodes episodes</i></p>}
                        @if (item.Format == "Film"){<p><i> @(item.LengthInMinutes / 60) h @(item.LengthInMinutes % 60) min</i></p>}

                  <p class="card-text" style="flex-grow: 1;"></p>
                  <div style="display: flex; justify-content: space-between; align-items: center;">
                                              <a href="@item.StreamingUrl"><img src="/Images/@item.LogoUrl" style="height:50px; box-shadow: -2px -2px 6px black; background-color:rgba(226,227,228,0.8)" class="center-cropped" alt="Logo for the streaming service @item.StreamingUrl" /></a>
                      @if (User.Identity.IsAuthenticated)
                      {
                            <a class="btn btn-primary" onclick="AddToWatchList(@item.Id)"><div id="buttonText_@item.Id"></div></a>
                      }
                      else
                      {
                            <a class="btn btn-primary" onclick="redirecttologin()" id="button_@item.Id"><div id="buttonText_@item.Id"></div></a>
                      }
                  </div>
                </div>
             </div>
           </div>
             `;
         }
        
        </text>

    }
        if (!resultsFound) {
            noResultsMessage.style.display = "block";
        }


    }
 

    function AddToWatchList(id) {
            fetch("/AddToWatchList/" + id,
                {
                    method: "GET",
                })
                .then(result => result.text())
                .then(html => {
                   
                        const buttonDiv = document.getElementById("buttonText_" + id)
                        buttonDiv.innerHTML = html
                        // const button = document.getElementById("button_" + id)
                        // button.ariaDisabled=true //KANSKE FIXA.
                })
    }

    function GetButtonText(id) {
        fetch("/GetButtonText/" + id,
            {
                method: "GET",
            })
            .then(result => result.text())
            .then(html => {
                const buttonDiv = document.getElementById("buttonText_" + id)
                buttonDiv.innerHTML = html
            })  
            
    }


    function redirecttologin() {
        document.location.href="/Login"
    }

    search();

   
</script>